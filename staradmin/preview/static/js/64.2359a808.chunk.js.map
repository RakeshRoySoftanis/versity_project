{"version":3,"sources":["app/apps/TodoList.js"],"names":["TodoList","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","setState","preventDefault","unshift","length","index","splice","value","className","aria-label","href","onClick","evt","aria-current","onSubmit","type","placeholder","onChange","required","map","ListItem","changed","key","remove","Component","htmlFor","children"],"mappings":"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","file":"static/js/64.2359a808.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [\n                {\n                    id: 1,\n                    task: 'Pick up kids from school',\n                    isCompleted: false\n                },\n                {\n                    id: 2,\n                    task: 'Prepare for presentation',\n                    isCompleted: true\n                },\n                {\n                    id: 3,\n                    task: 'Print Statements',\n                    isCompleted: false\n                },\n                {\n                    id: 4,\n                    task: 'Create invoice',\n                    isCompleted: false\n                },\n                {\n                    id: 5,\n                    task: 'Call John',\n                    isCompleted: true\n                },\n                {\n                    id: 6,\n                    task: 'Meeting with Alisa',\n                    isCompleted: false\n                }\n            ],\n            inputValue: '',\n        }\n\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    statusChangedHandler(event, id) {\n        const todo = {...this.state.todos[id]};\n        todo.isCompleted = event.target.checked;\n\n        const todos = [...this.state.todos];\n        todos[id] = todo;\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    addTodo (event) {\n        event.preventDefault();\n\n        const todos = [...this.state.todos];\n        todos.unshift({\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n            task: this.state.inputValue,\n            isCompleted: false\n            \n        })\n\n        this.setState({\n            todos: todos,\n            inputValue: ''\n        })\n    }\n\n    removeTodo (index) {\n        const todos = [...this.state.todos];\n        todos.splice(index, 1);\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    inputChangeHandler(event) {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Todo List\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Todo List</h4>\n                                <form  className=\"add-items d-sm-flex\" onSubmit={this.addTodo}>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control h-auto\" \n                                        placeholder=\"What do you need to do today?\" \n                                        value={this.state.inputValue} \n                                        onChange={this.inputChangeHandler}\n                                        required />\n                                    <button type=\"submit\" className=\"btn btn-primary font-weight-bold ml-0 ml-sm-2 mt-2 mt-sm-0\">Add</button>\n                                </form>\n                                <div className=\"list-wrapper\">\n                                    <ul className=\"d-flex flex-column todo-list\">\n                                        {this.state.todos.map((todo, index) =>{\n                                            return <ListItem \n                                            isCompleted={todo.isCompleted}\n                                            changed={(event) => this.statusChangedHandler(event, index)}\n                                            key={todo.id}\n                                            remove={() => this.removeTodo(index) }\n                                            >{todo.task}</ListItem>\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst ListItem = (props) => {\n    \n    return (\n        <li className={(props.isCompleted ? 'completed' : null)}>\n            <div className=\"form-check\">\n                <label htmlFor=\"\" className=\"form-check-label\"> \n                    <input className=\"checkbox\" type=\"checkbox\" \n                        checked={props.isCompleted} \n                        onChange={props.changed} \n                        /> {props.children} <i className=\"input-helper\"></i>\n                </label>\n            </div>\n            <i className=\"remove mdi mdi-close-circle-outline\" onClick={props.remove}></i>\n        </li>\n    )\n};\n\nexport default TodoList\n"],"sourceRoot":""}